var roleHarvester = {
    run: function(creep) {
        if (creep.store.getFreeCapacity() > 0) {
            var sources = creep.room.find(FIND_SOURCES);
            if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {
                creep.moveTo(sources[0], {visualizePathStyle: {stroke: '#ffaa00'}});
            }
        } else {
            var targets = creep.room.find(FIND_STRUCTURES, {
                filter: (structure) => {
                    return (structure.structureType == STRUCTURE_EXTENSION) &&
                            structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;
                }
            });

            if (targets.length === 0) {
                // 查找有空间的 container
                targets = creep.room.find(FIND_STRUCTURES, {
                    filter: (structure) => {
                        return (structure.structureType == STRUCTURE_CONTAINER) &&
                                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;
                    }
                });
            }

            if (targets.length === 0) {
                // 如果 container 也满了，尝试 storage
                targets = creep.room.find(FIND_STRUCTURES, {
                    filter: (structure) => {
                        return (structure.structureType == STRUCTURE_STORAGE) &&
                                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;
                    }
                });
            }

            if (targets.length === 0) {
                // 如果 storage 也满了，尝试 spawn
                targets = creep.room.find(FIND_STRUCTURES, {
                    filter: (structure) => {
                        return (structure.structureType == STRUCTURE_SPAWN) &&
                                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;
                    }
                });
            }

            if (targets.length > 0) {
                if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});
                }
            } else {
                var towerToFill = findTowerToFill(creep);
                if (towerToFill) {
                    if (creep.transfer(towerToFill, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                        creep.moveTo(towerToFill, {visualizePathStyle: {stroke: '#ffffff'}});
                    }
                }
            }
        }
    }
};

// 找到最近的需要能量的 tower
function findTowerToFill(creep) {
    var towers = creep.room.find(FIND_MY_STRUCTURES, {
        filter: (structure) => {
            return structure.structureType === STRUCTURE_TOWER && structure.energy < structure.energyCapacity;
        }
    });

    if (towers.length > 0) {
        return creep.pos.findClosestByPath(towers);
    } else {
        return null;
    }
}

module.exports = roleHarvester;